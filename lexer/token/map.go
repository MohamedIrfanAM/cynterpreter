package token

var TokenMap map[TokenType]string = map[TokenType]string{
	0:  "EOF",
	13: "ILLEGAL",
	1:  "LPAREN",
	2:  "RPAREN",
	3:  "LBRACK",
	4:  "RBRACK",
	5:  "LBRACE",
	6:  "RBRACE",
	7:  "COMMA",
	8:  "SEMCOL",
	9:  "ASTER",
	10: "ASSIGN",
	11: "PREPROC",
	12: "DOT",
	14: "TILDE",
	15: "ARROW",
	16: "INCR",
	17: "DECR",
	18: "PLUS",
	19: "MINUS",
	20: "NOT",
	21: "SLASH",
	22: "PERCENT",
	23: "LSHIFT",
	24: "RSHIFT",
	25: "LT",
	26: "LE",
	27: "GT",
	28: "GE",
	29: "EQ",
	30: "NE",
	31: "AMP",
	32: "XOR",
	33: "PIPE",
	34: "AND",
	35: "OR",
	36: "QUESTION",
	37: "COLON",
	38: "PLUSEQ",
	39: "MINUSEQ",
	40: "ASTEREQ",
	41: "SLASHEQ",
	42: "PERCENTEQ",
	43: "AMPEQ",
	44: "XOREQ",
	45: "PIPEEQ",
	46: "LSHIFTEQ",
	47: "RSHIFTEQ",
	48: "AUTO",
	49: "BREAK",
	50: "CASE",
	51: "CHAR",
	52: "CONST",
	53: "CONTINUE",
	54: "DEFAULT",
	55: "DO",
	56: "DOUBLE",
	57: "ELSE",
	58: "ENUM",
	59: "EXTERN",
	60: "FLOAT",
	61: "FOR",
	62: "GOTO",
	63: "IF",
	64: "INLINE",
	65: "INT",
	66: "LONG",
	67: "REGISTER",
	68: "RESTRICT",
	69: "RETURN",
	70: "SHORT",
	71: "SIGNED",
	72: "SIZEOF",
	73: "STATIC",
	74: "STRUCT",
	75: "SWITCH",
	76: "TYPEDEF",
	77: "UNION",
	78: "UNSIGNED",
	79: "VOID",
	80: "VOLATILE",
	81: "WHILE",
	92: "IDENTIFIER",
	93: "INT_LITERAL",
	94: "FLOAT_LITERAL",
	95: "CHAR_LITERAL",
	96: "STRING_LITERAL",
}

var PunctuatorMap map[byte]TokenType = map[byte]TokenType{
	'(': LPAREN,
	')': RPAREN,
	'[': LBRACK,
	']': RBRACK,
	'{': LBRACE,
	'}': RBRACE,
	',': COMMA,
	';': SEMCOL,
	'#': PREPROC,
	'.': DOT,
	'~': TILDE,
}

var OperatorMap map[string]TokenType = map[string]TokenType{
	"->":  ARROW,
	"++":  INCR,
	"--":  DECR,
	"+":   PLUS,
	"-":   MINUS,
	"*":   ASTER,
	"=":   ASSIGN,
	"!":   NOT,
	"/":   SLASH,
	"%":   PERCENT,
	"<<":  LSHIFT,
	">>":  RSHIFT,
	"<":   LT,
	"<=":  LE,
	">":   GT,
	">=":  GE,
	"==":  EQ,
	"!=":  NE,
	"&":   AMP,
	"^":   XOR,
	"|":   PIPE,
	"&&":  AND,
	"||":  OR,
	"?":   QUESTION,
	":":   COLON,
	"+=":  PLUSEQ,
	"-=":  MINUSEQ,
	"*=":  ASTEREQ,
	"/=":  SLASHEQ,
	"%=":  PERCENTEQ,
	"&=":  AMPEQ,
	"^=":  XOREQ,
	"|=":  PIPEEQ,
	"<<=": LSHIFTEQ,
	">>=": RSHIFTEQ,
}

var KeywordMap map[string]TokenType = map[string]TokenType{
	"auto":     AUTO,
	"break":    BREAK,
	"case":     CASE,
	"char":     CHAR,
	"const":    CONST,
	"continue": CONTINUE,
	"default":  DEFAULT,
	"do":       DO,
	"double":   DOUBLE,
	"else":     ELSE,
	"enum":     ENUM,
	"extern":   EXTERN,
	"float":    FLOAT,
	"for":      FOR,
	"goto":     GOTO,
	"if":       IF,
	"inline":   INLINE,
	"int":      INT,
	"long":     LONG,
	"register": REGISTER,
	"restrict": RESTRICT,
	"return":   RETURN,
	"short":    SHORT,
	"signed":   SIGNED,
	"sizeof":   SIZEOF,
	"static":   STATIC,
	"struct":   STRUCT,
	"switch":   SWITCH,
	"typedef":  TYPEDEF,
	"union":    UNION,
	"unsigned": UNSIGNED,
	"void":     VOID,
	"volatile": VOLATILE,
	"while":    WHILE,
}

var OpSymbols []byte = []byte{
	'+', '-', '*', '/', '%', '&', '|', '^', '~', '!', '=', '<', '>', '?', ':',
}

var WhiteSpaceSymbols = []byte{
	' ', '\n', '\t', '\v', '\f', '\r',
}
